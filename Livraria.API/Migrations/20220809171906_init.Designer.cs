// <auto-generated />
using Livraria.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Livraria.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220809171906_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Livraria.API.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int>("Launch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PublisherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalRented")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Juliano Santos",
                            Launch = 23072001,
                            Name = "Flor de Verão",
                            PublisherId = 1,
                            Quantity = 10,
                            TotalRented = 23
                        },
                        new
                        {
                            Id = 2,
                            Author = "Alex Santos",
                            Launch = 8072001,
                            Name = "Flor",
                            PublisherId = 3,
                            Quantity = 68,
                            TotalRented = 90
                        },
                        new
                        {
                            Id = 3,
                            Author = "Raquel Lovewood",
                            Launch = 23082001,
                            Name = "Oi vida",
                            PublisherId = 5,
                            Quantity = 10,
                            TotalRented = 36
                        },
                        new
                        {
                            Id = 4,
                            Author = "Ana Luana",
                            Launch = 23072004,
                            Name = "Feliz mas não",
                            PublisherId = 2,
                            Quantity = 3,
                            TotalRented = 23
                        },
                        new
                        {
                            Id = 5,
                            Author = "Lara Alencar",
                            Launch = 13072001,
                            Name = "Doce tristeza",
                            PublisherId = 4,
                            Quantity = 53,
                            TotalRented = 46
                        });
                });

            modelBuilder.Entity("Livraria.API.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Cascavel",
                            Name = "Bem me quer"
                        },
                        new
                        {
                            Id = 2,
                            City = "RJ",
                            Name = "Flores balas"
                        },
                        new
                        {
                            Id = 3,
                            City = "Horizonte",
                            Name = "Produtos Ivone"
                        },
                        new
                        {
                            Id = 4,
                            City = "São Paulo",
                            Name = "Nuvem"
                        },
                        new
                        {
                            Id = 5,
                            City = "Fortaleza",
                            Name = "Luz"
                        });
                });

            modelBuilder.Entity("Livraria.API.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Forecast_Date")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rental_Date")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Return_date")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Forecast_Date = 280920022,
                            Rental_Date = 20220923,
                            Return_date = 26092022,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            Forecast_Date = 200920022,
                            Rental_Date = 1092022,
                            Return_date = 15092022,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 1,
                            Forecast_Date = 210920022,
                            Rental_Date = 4092022,
                            Return_date = 20092022,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            BookId = 5,
                            Forecast_Date = 300920022,
                            Rental_Date = 21092022,
                            Return_date = 25092022,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Livraria.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Rua A",
                            City = "Cascavel",
                            Email = "Artur@gmail.com",
                            Name = "Artur"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Rua T",
                            City = "Caucaia",
                            Email = "Ana@gmail.com",
                            Name = "Ana"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Rua K",
                            City = "São Paulo",
                            Email = "Vilma@gmail.com",
                            Name = "Vilma"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Rua E",
                            City = "Fortaleza",
                            Email = "Vitor@gmail.com",
                            Name = "Vitor"
                        });
                });

            modelBuilder.Entity("Livraria.API.Models.Book", b =>
                {
                    b.HasOne("Livraria.API.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Livraria.API.Models.Rental", b =>
                {
                    b.HasOne("Livraria.API.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Livraria.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
